// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

[
  {
    "namespace": "managedStorage",
    "description": "Use the <code>chrome.managedStorage</code> API to store, retrieve, and track changes to user data.",
    "compiler_options": {
      "implemented_in": "electron/brave/browser/extensions/api/storage/managed_storage_api.h"
    },
    "types": [
      {
        "id": "StorageChange",
        "type": "object",
        "properties": {
          "oldValue": {
            "type": "any",
            "description": "The old value of the item, if there was an old value.",
            "optional": true
          },
          "newValue": {
            "type": "any",
            "description": "The new value of the item, if there is a new value.",
            "optional": true
          }
        }
      }
    ],
    "events": [
      {
        "name": "onChanged",
        "type": "function",
        "description": "Fired when one or more items change.",
        "parameters": [
          {
            "name": "changes",
            "type": "object",
            "additionalProperties": { "$ref": "StorageChange" },
            "description": "Object mapping each key that changed to its corresponding $(ref:storage.StorageChange) for that item."
          }
        ]
      }
    ],
    "functions": [
      {
        "name": "get",
        "type": "function",
        "description": "Gets one or more items from storage.",
        "parameters": [
          {
            "name": "keys",
            "choices": [
              { "type": "string" },
              { "type": "array", "items": { "type": "string" } },
              {
                "type": "object",
                "description": "Storage items to return in the callback, where the values are replaced with those from storage if they exist.",
                "additionalProperties": { "type": "any" }
              }
            ],
            "description": "A single key to get, list of keys to get, or a dictionary specifying default values (see description of the object).  An empty list or object will return an empty result object.  Pass in <code>null</code> to get the entire contents of storage.",
            "optional": true
          },
          {
            "name": "callback",
            "type": "function",
            "description": "Callback with storage items, or on failure (in which case $(ref:runtime.lastError) will be set).",
            "parameters": [
              {
                "name": "items",
                "type": "object",
                "additionalProperties": { "type": "any" },
                "description": "Object with items in their key-value mappings."
              }
            ]
          }
        ]
      },
      {
        "name": "set",
        "type": "function",
        "description": "Sets multiple items.",
        "parameters": [
          {
            "name": "items",
            "type": "object",
            "additionalProperties": { "type": "any" },
            "description": "<p>An object which gives each key/value pair to update storage with. Any other key/value pairs in storage will not be affected.</p><p>Primitive values such as numbers will serialize as expected. Values with a <code>typeof</code> <code>\"object\"</code> and <code>\"function\"</code> will typically serialize to <code>{}</code>, with the exception of <code>Array</code> (serializes as expected), <code>Date</code>, and <code>Regex</code> (serialize using their <code>String</code> representation).</p>"
          },
          {
            "name": "callback",
            "type": "function",
            "description": "Callback on success, or on failure (in which case $(ref:runtime.lastError) will be set).",
            "parameters": [],
            "optional": true
          }
        ]
      },
      {
        "name": "remove",
        "type": "function",
        "description": "Removes one or more items from storage.",
        "parameters": [
          {
            "name": "keys",
            "choices": [
              {"type": "string"},
              {"type": "array", "items": {"type": "string"}}
            ],
            "description": "A single key or a list of keys for items to remove."
          },
          {
            "name": "callback",
            "type": "function",
            "description": "Callback on success, or on failure (in which case $(ref:runtime.lastError) will be set).",
            "parameters": [],
            "optional": true
          }
        ]
      },
      {
        "name": "clear",
        "type": "function",
        "description": "Removes all items from storage.",
        "parameters": [
          {
            "name": "callback",
            "type": "function",
            "description": "Callback on success, or on failure (in which case $(ref:runtime.lastError) will be set).",
            "parameters": [],
            "optional": true
          }
        ]
      }
    ]
  }
]
